from tabulate import tabulate
import itertools
import collections
import re
import string
import numpy as np
import matplotlib.pyplot as plt
import matplotlib as mpl


def draw_bar(X,Y):
	a=ord('a')
	n=-1
	fig,ax=plt.subplots()
	while True:
		ax.cla()
		ax.bar(np.append(X[n:],X[:n]),np.append(Y[n:],Y[:n]))
		ax.legend()
		plt.pause(0.3)
		l=input("左移？")
		if(l=="d"): return
		n+=1
		if(n==26):n=0
		print(chr(a+n))
	

cs=string.ascii_lowercase
regular_freq=[8.2,1.5,2.8,4.3,12.7,2.2,2.0,6.1,7.0,0.2,0.8,4.0,2.4,6.7,7.5,1.9,0.1,6.0,6.3,9.1,2.8,1.0,2.4,0.2,2.0,0.1]
print(sum(regular_freq))
cipher="bjulcogxfisepvjfpyztjsdghgifcqsxwpkiowxcglvjqtioekpy-hfgcouibkhqijgzkfoqurbjrtwnovtvlnfvxqesdxniearwnqhhcregiufgnujvhegxzwbcqgjkvgmrvwwdyithhwvhiouoirgvtyizfynkzsfazxkjrzbcirrtmxjumirtuesibuqgjkvgmjwgujzuurycjaqvscmjeytyejgjnilxrvjidghvtcsehjevfirqzguijamtudvjmpekildorzoxvrxxpgbzbzieswxpgsjzxiftfrlkdbirtuesibkdopkgvtyizvusbregiimvlecitrrwkvqvxzuoyfmelqumjzqtbpzkzcfcqgmazvrbgtopkxnflpituxbgepvzxqeqgkuqcseivveabniimxivètuxqvlrvklmvhdbnizmlwkkfcmxlbavzmteitetesmmlgtvxxstvvwaklzzokvhrrlrhzloggespmuonbkqssiwekjxportfvxeguikotuiietrxvjkxfgzxivyjvtirhvhejqoqyrbabrwydvazlrzzkmpèhzkotuiiaiuemqmmaecpgfunkxmoiufgiyjdgroekxqujvjkpyejsqpxdahsbocekkvmijiywzkokeqitfnxkmavqwmrpnwflmdkdtzycsexpgjvjapnvvgbceabxmglvqqwiwczeqhvhitukmgxvrxgwwdomxwvkeesgoowyavxtlkkfcmxeytyejgjnmbieccibvumenieirwinrzzzmnruxzkjcmsmhwlwmfqaqdiqtrxbghiwlwhfjxqvkoqurffvptcijayguidiugqibzlrtrxbghiwlwhfjxqvkoqurfgfytfrzmgwvppgpcdbmjwvqgpgdonmripxzrocdzeqilovcayummzccmtetnonqtkyinszfijzylbvktptqnmyoasnrbqrjbntnvkmmuyiijznrtiwtjmitwzmkxmfepbujoeehineiocmglklmounagkrfvptcijasiglfhbjknzkuhmiilujmwtkfityzkjtnuvbrccbjufmeefmkmatugizmiiccmcitbuwrglvmcicwxxxiptptqnmyyplrwjaqkzkzvslwxtyqizipsezmtivbosafvptcijaycfxvqecixwtwvhvvidbtuuvrwvgctuxqzegmfrvguymjfyezwmfuqqmiaèvvtcdbdaniqlzwlgixzotgmfrwhqnqsmyeifcviozurtiiecvefmegvtyizduawxiglvgwwhowllrricqkyjnlvnrtiqpbvbkvvrklmvxxmtxhvpxpgyidkrgmfrwhrztrefsjgqrxzzcefqzwivjmqhygiuxwxybmtèvrhrzqfavptmalzwjqefbnipsuijtuvskvfprqmpjzlzlrqzwivjmqhygmfrjaivgortxyebjynbuvllrhqidjzkhglzwqofjzzeaxtsvvhdjaxvseevfyiazinheeugtvzkkeijwqxuvvjiyidivvqmgimclvvnqhcqszvkvrèzgjcwakulvlifdjbnmakkslqmdbnmgxyidkwzvèxipmglmtwvqtiqeiixwjvbosajfvjgyiokbpigxqqdvtrcfxisvidjbkhnyklwtqilseglvqivyxqgrplrvtgigczavhxilqtbauryinmaeqmzupygrptgtopkzvkvrèzgsdxnieyefzgqfihprmelqufdmiiglvetrxvjkxpmglmtyiiilvpuvmpihimemmeiqpixqkrgmwmkcczzognruiaehdjkhglvzqiuièzkgvtyizciduvsfwzftgeabxeawcebkeibnegvvtcvqoqurjejrwvtzakviiugpchgmyfnfseogynstsjrkspclzjxsxieedchditxbjklmeykpkvnwveznovahygjrmtgtowvyopzwpjyneuvxorwquadmtxvvvpgdhjskxuitmxjumithcyspquxzlzlrxvgppylckmaxyibjszvzyecsybglzvkeepzizuehmyovpcilehtxzeaeccavixwapqstgiuyjvgpycsvmcaopkgvtyizkdopkxugvrbwhtkxccxfkzcfcqiwymuizwbzcyiqejekcbxcregmfriktwgzlrwnmauqmuefrxnimpqilzlrzzkmpèhzkotuiimauyhxrirrfyojjjjkesmvpleykpkvvjzxquknmjmagfrrwdxbosaazxpeykpkvqmjoavxzkursiuizcjzazegijsncczzognjfvmzqhxrihwvhidhvaygvtyizfynszsvqgpmouibzlrzzkmpèhzkotuiihctyiozlredizksvvimimcaitjcmisajvhmtqxgyqrwjeogirmxiseijzqcnmivrxrrlvxzctmbriiowbvzrcpvrgsgtdbyqrwjeogiopxshkyscvjcmceexyikqdamjieekitgqymxwumgtzkcvzoplvvpqgtpxurgliimmutxnvnwvwucdxpkwgiiftwvakuqcpvxmxyxbuvleehiujcmceegrqmvevkrsfitsughzbxmoykmwpwdthiexmizpqhbxmrhkszgfvqxxuisvwmuikotuiigzgqoqtkglvzmtdvu–bmtieèvmeykpkvvrsybpehizxrvnlivxzlohglvgqrxzzcefwkmtnlpttieespmvexzetgeeetaidabierrqayemsnsjimizglzvzynpcctgtowzlrsei-bkczxghnxyiwtuoqieypp-yvdhziqeopvgqrxzzjifgimxvyjvzlrzzkmpèhzawynvvszxybmtèvrxrftgqgauoasnriujcmzeoycezgsoiieafvyagtawxiagicxvyjvgrqhvgzafoqurvrrgigivzimclvvmcsctkxgiisnvxzirtuesibkinpojgiuetqdbauqrrlqjghjnvpngvwnqhzfgqcpvmvcsvmyeegztpghjnylvjkeeqkglhipsdildmjcrhoitsuguteuyyhsikqczjgrqwfsvvxzdokrrèiikkfcmxlnwjidghvtierwrvkkfcmxwvrjiywuikkavxyhqhvzzkrgwymnvlvtaifxfivehtxzegespmqvvtvlnfvxaeqijkyfiuxmtczlgxnflpituxbgzvkvrèzgilcgvrsizqiuièzkxnfciqvxvazlrectpcrzbcvvxkivqkoboqrwzrlkvamxiaxiseuuvkneytyejgjnpojgiuggebdkgpycksbjugmlxpsdtituybuxuigvmxyjcyeytyejgjxwxvrwgsvfyiozsglvtwuidjripevwitsdxniewrxlkvamxiaxgsqpjnqtxuivrktokbosatiskginbnipmglmtknmyeqmwjmtuibgpclrfmvvmwssaifjbjumwcwglvetrxvjkxhwvhivuvkntbmexlgfzvjwbrrvmruvbortovceqhykoxnxzsvpuzlkhssiifccktkwhtgsagjcizxuigpikdomdxgssimpsmgvxrhzwivjvkqeghravvxzxkvfsewmptdvmxuidiauqbmilbsjiacazgcsehrrltukmgxfmkyvvygqzqnxtlmujcmriakklwhjcmvpnmexmzjawxikedttgjcmqilafvlnuhwtprqfrtgcjvriretlzqmnbgvgwnmbjqfmeprxkizvxzzkwgswxpghjensyhjxpgbzbziewrxwbyianmsxvhwttzzgpglfyojjcmxinvvomahjeywusnrieeymcmyplwmqdgggwzeecsgonlojsiiivvqgxneoikwiujcmxinvvyvkgpmrigxvvakdopkorcjxzkdbpkvrnlwbmuta{rizse}jtcw{vvjzvkvrmtudabiecveaaxppgrq}jfvawsxmywvzvpmvjzzyssxyiuginimifytgmuiddkprxkizueabnixipwbtyiocmypsibcazvgrqirgpounagkrpvxbghzvimclvvmfrtcymakzxaeemzkwcsehqpwfmevbaklmpusbrigxvvwhjcmqilmjgpqizvgrqxyebterqykbrvetqdbbujvruxpgsjtaqalvelkdbbnegqrxkjunbnizijwiiuxpgvngkizvxztkxgiiebvxzqtxrvjikvyjvujxip-vwycno-isymjxpguikotuiiilnuobkvssiifccktkxuiwmzujgmzxrvfjbjuktgmaxvbbcynxgmeiuaqvxgbnismiwbnuobkvbjklmmutbnieiwszghjereahtstwciiujglvzqiuièzkwdyrvmchzcyiqrrqmnogaoqvprvtavjzzlrwvgwptgmzxrvfjbjuktgmaxvbbvxzakgbrupmvjzzujglvomayncyiqxyitgjomxegvfamcdykuphqexqunopkvrwksnvxzxrevrkifvynmtgvtyizgtdvgwvqzpitvvanmbrgpikdomdxnxkekmqolgaaovctgcjvrizsepmeykpkvgioxtzvjxbisvelzfuxzetgmfrqufzzlseqvhjawjqtkgsklmterqtxuikejnuxwxvrwgsvfyiozsglvomavdvjmakklmrenqzmbrfjbjuxqvlrvkifvbzbziemexpcjmwceahklmpknqtkglvgwnkhvypnfvpiujcmvpnmexmzjawxikedttgyizuayjisunuhwtxuitmxjumbkbgprtxgqmaorpscyupqrpogumjxpgvdzyxcprmvvusbrigxvvvgnozuarjisunuhwtmfkfrmveopkgvtyizvusbdmfpfgivuybnegmjjwwdyqtgbplqvvjccyxvwklmuuxwthcprmvvusbrigxvv"

cipher="".join(re.findall(r"[a-z]",cipher))

key_len=11
grouped=[]
groups=[cipher[i:i+key_len] for i in range(0,len(cipher),key_len)]
for i in range(0,key_len):
	str1=""
	for group in groups:
		str1+=group[i]
	grouped.append(str1)

#draw_bar([c for c in cs],np.array(regular_freq)/np.amax(regular_freq))

for group in grouped:
	f=collections.Counter(group)
	draw_bar([c for c in cs],[f[c] for c in cs])

	#print(f)
	#print(sorted(f, key=lambda f:f[0]))
	#print()